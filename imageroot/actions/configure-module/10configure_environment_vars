#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent

# Try to parse the stdin as JSON.
# If parsing fails, output everything to stderr
data = json.load(sys.stdin)

#This is specific to you module, so you need to change it accordingly.
# we read a json stdin {"vars1":true, "var2":"foo", "vars3": 3} and we writ it to .config/state/environment

# write Postgres configuration to .config/state/postgres.env
POSTGRES_DB = data.get("POSTGRES_DB", "infisical")
POSTGRES_USER = data.get("POSTGRES_USER", "infisical")
POSTGRES_PASSWORD = data.get("POSTGRES_PASSWORD", "J5brHrAXFLQSif0K")
POSTGRES_HOST = data.get("POSTGRES_HOST", "postgresql-app")
POSTGRES_PORT = data.get("POSTGRES_PORT", "5432")


postgres_config = {
    "POSTGRES_DB":POSTGRES_DB,
    "POSTGRES_USER": POSTGRES_USER,
    "POSTGRES_PASSWORD": POSTGRES_PASSWORD,
    "POSTGRES_HOST": POSTGRES_HOST,
    "POSTGRES_PORT": POSTGRES_PORT
}
# write it to .config/state/postgres.env
agent.write_envfile(postgres_config, "postgres.env")


# just before starting systemd unit
#agent.dump_env()
